{"remainingRequest":"/Users/chenlu/ipfc_webapp/node_modules/babel-loader/lib/index.js!/Users/chenlu/ipfc_webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenlu/ipfc_webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenlu/ipfc_webapp/src/views/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenlu/ipfc_webapp/src/views/login.vue","mtime":1575177107186},{"path":"/Users/chenlu/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/ipfc_webapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenlu/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/ipfc_webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMb2dpbicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlucHV0OiB7CiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJwogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHZhbGlkYXRpb246IGZ1bmN0aW9uIHZhbGlkYXRpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLmlucHV0LmVtYWlsLmxlbmd0aCA+IDQgJiYgdGhpcy5pbnB1dC5lbWFpbC5sZW5ndGggPCAxMzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxvZ0luOiBmdW5jdGlvbiBsb2dJbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBsb2dJblVSTCwgaGVhZGVycywgdXNlcm5hbWUsIHBhc3N3b3JkOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGxvZ0luJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBsb2dJblVSTCA9ICJodHRwczovL2lwZmMtbWlkd2FyZS5oZXJva3VhcHAuY29tL2xvZ2luIjsKICAgICAgICAgICAgICBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTsKICAgICAgICAgICAgICB1c2VybmFtZSA9IHRoaXMuaW5wdXQuZW1haWw7CiAgICAgICAgICAgICAgcGFzc3dvcmQgPSB0aGlzLmlucHV0LnBhc3N3b3JkOwogICAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpOwogICAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKCdBdXRob3JpemF0aW9uJywgJ0Jhc2ljICcgKyBidG9hKHVzZXJuYW1lICsgIjoiICsgcGFzc3dvcmQpKTsKICAgICAgICAgICAgICBmZXRjaChsb2dJblVSTCwgewogICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlSnNvbikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2VKc29uKTsKCiAgICAgICAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlSnNvbgogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA;AADA,KAAA;AAMA,GATA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,EAAA;AACA;AAHA,GAVA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,KADA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,cAAA,QAFA,GAEA,0CAFA;AAGA,cAAA,OAHA,GAGA,IAAA,OAAA,EAHA;AAIA,cAAA,QAJA,GAIA,KAAA,KAAA,CAAA,KAJA;AAKA,cAAA,QALA,GAKA,KAAA,KAAA,CAAA,QALA;AAOA,cAAA,OAAA,CAAA,MAAA,CAAA,cAAA,EAAA,kBAAA;AACA,cAAA,OAAA,CAAA,MAAA,CAAA,eAAA,EAAA,WAAA,IAAA,CAAA,QAAA,GAAA,GAAA,GAAA,QAAA,CAAA;AACA,cAAA,KAAA,CAAA,QAAA,EAAA;AAAA,gBAAA,OAAA,EAAA;AAAA,eAAA,CAAA,CACA,IADA,CACA,UAAA,QAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAA,eADA,EAEA,IAFA,CAEA,UAAA,YAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,YAAA;;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA;AACA,kBAAA,IAAA,EAAA;AADA,iBAAA;AAGA,eAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,gBAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,eAVA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA,CAAA","sourcesContent":["\n\n<template>\n<div id=\"body\">\n    <h1>IPFC Login</h1>\n    <b-form @submit.stop.prevent id=\"form-signin\">\n        <label for=\"feedback-email\">Email</label>\n        <b-input v-model=\"input.email\" :state=\"validation\" id=\"feedback-email\"></b-input>\n        <b-form-invalid-feedback :state=\"validation\">\n            Your user ID must be 5-12 characters long.\n        </b-form-invalid-feedback>\n        <b-form-valid-feedback :state=\"validation\">\n            Looks Good.\n        </b-form-valid-feedback>\n        <label for=\"text-password\">Password</label>\n        <b-input v-model=\"input.password\" type=\"password\" id=\"text-password\" aria-describedby=\"password-help-block\"></b-input>\n        <b-form-text id=\"password-help-block\">\n            Your password must be 8-20 characters long, contain letters and numbers, and must not\n            contain spaces, special characters, or emoji.\n        </b-form-text>\n        <b-button type=\"submit\" @click=\"logIn()\" variant=\"primary\">Submit</b-button>\n    </b-form>\n</div>\n\n</template>\n\n<script>\n// import axios from 'axios';\n\n\nexport default {\n    name: 'Login',\n    data() {\n        return {\n            input: {\n                email: '',\n                password: '',\n            }\n        }\n    },\n    computed: {\n        validation() {\n            return this.input.email.length > 4 && this.input.email.length < 13\n        }\n    },\n    methods: {\n        async logIn() {\n            let logInURL = \"https://ipfc-midware.herokuapp.com/login\";\n            let headers = new Headers();\n            let username = this.input.email\n            let password = this.input.password\n\n            headers.append('Content-Type', 'application/json')\n            headers.append('Authorization', 'Basic ' + btoa(username + \":\" + password));                            \n            fetch(logInURL, { headers: headers \n            }).then((response) => response.json())\n                .then((responseJson) => {\n                console.log(responseJson);\n                    this.setState({\n                        data: responseJson\n                        })\n                    })\n                .catch((error) => {\n            console.error(error);\n            });\n        }\n    }\n}\n</script>\n\n<style scoped>\n    #body {\n        padding: 20px;\n        margin: auto;\n    }\n    #form-signin{\n        max-width: 330px;\n    }\n</style>"],"sourceRoot":"src/views"}]}