{"remainingRequest":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/babel-loader/lib/index.js!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/views/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/views/login.vue","mtime":1575474502164},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMb2dpbicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVycm9yczogW10sCiAgICAgIGlucHV0OiB7CiAgICAgICAgdXNlcm5hbWU6ICIiLAogICAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgICBzZXJ2ZXI6ICIiCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgc2VydmVyID0gImh0dHBzOi8vaXBmYy1taWR3YXJlLmhlcm9rdWFwcC5jb20vIjsKICAgICAgY29uc29sZS5sb2coIlBvc3RpbmcgdG8gIiArIHRoaXMuaW5wdXQuc2VydmVyKTsgLy9mcm9tIGh0dHBzOi8vYWxsaWdhdG9yLmlvL3Z1ZWpzL3Jlc3QtYXBpLWF4aW9zLwoKICAgICAgdmFyIGF1dGhSZXEgPSB7CiAgICAgICAgJ3VzZXInOiB0aGlzLmlucHV0LnVzZXJuYW1lLAogICAgICAgICdwYXNzd29yZCc6IHRoaXMuaW5wdXQucGFzc3dvcmQKICAgICAgfTsKICAgICAgYXhpb3MucG9zdChzZXJ2ZXIsIHsKICAgICAgICBib2R5OiBhdXRoUmVxCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzLmVycm9ycy5wdXNoKGUpOwogICAgICB9KTsKICAgICAgLyp0cnkgewogICAgICAgICAgYXdhaXQgYXhpb3MucG9zdCh0aGlzLmlucHV0LnNlcnZlciwgewogICAgICAgICAgICAgICAgYm9keTogdGhpcy5wb3N0Qm9keQogICAgICAgICAgfSkKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICB0aGlzLmVycm9ycy5wdXNoKGUpCiAgICAgIH0KICAgICAgKi8KCiAgICAgIC8qKmlmKHRoaXMuaW5wdXQudXNlcm5hbWUgIT0gIiIgJiYgdGhpcy5pbnB1dC5wYXNzd29yZCAhPSAiIikgewogICAgICAgICAgaWYodGhpcy5pbnB1dC51c2VybmFtZSA9PSB0aGlzLiRwYXJlbnQubW9ja0FjY291bnQudXNlcm5hbWUgJiYgdGhpcy5pbnB1dC5wYXNzd29yZCA9PSB0aGlzLiRwYXJlbnQubW9ja0FjY291bnQucGFzc3dvcmQpIHsKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCJhdXRoZW50aWNhdGVkIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoeyBuYW1lOiAic2VjdXJlIiB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coIlRoZSB1c2VybmFtZSBhbmQgLyBvciBwYXNzd29yZCBpcyBpbmNvcnJlY3QiKTsKICAgICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJBIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBtdXN0IGJlIHByZXNlbnQiKTsKICAgICAgfSovCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA;AAHA;AAFA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,EAAA;AAEA,IAAA,KAFA,mBAEA;AAAA;;AACA,UAAA,MAAA,GAAA,qCAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,KAAA,KAAA,CAAA,MAAA,EAFA,CAGA;;AACA,UAAA,OAAA,GAAA;AACA,gBAAA,KAAA,KAAA,CAAA,QADA;AAEA,oBAAA,KAAA,KAAA,CAAA;AAFA,OAAA;AAIA,MAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,EAGA,IAHA,CAGA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,OARA;AAWA;;;;;;;;;AASA;;;;;;;;;;AAUA;AAxCA;AAZA,CAAA","sourcesContent":["<template>\n    <div id=\"login\">\n        <h1>Login</h1>\n        <input type=\"text\" name=\"username\" v-model=\"input.username\" placeholder=\"Username\" />\n        <input type=\"password\" name=\"password\" v-model=\"input.password\" placeholder=\"Password\" />\n        <input type=\"text\" name=\"server\" v-model=\"input.server\" placeholder=\"Server\" data-value=\"https://ipfc-midware.herokuapp.com/\" readonly/>\n        <button type=\"button\" v-on:click=\"login()\">Login</button>\n\n              <ul v-if=\"errors && errors.length\">\n            <li v-for=\"error of errors\" v-bind:key=\"error\" >\n            {{error.message}}\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n\n    export default {\n        name: 'Login',\n        data() {\n            return {\n                errors: [],\n                input: {\n                    username: \"\",\n                    password: \"\",\n                    server: \"\"\n                }\n            }\n        },\n        methods: {\n\n            login() {\n                let server = \"https://ipfc-midware.herokuapp.com/\";\n                console.log(\"Posting to \"+ this.input.server);\n                //from https://alligator.io/vuejs/rest-api-axios/\n                let authReq = {\n                    'user': this.input.username,\n                    'password': this.input.password\n                }\n                axios.post(server, {\n                    body: authReq\n                })\n                .then(response => {\n                    console.log(response);\n                })\n                .catch(e => {\n                    this.errors.push(e)\n                })\n\n\n                /*try {\n                    await axios.post(this.input.server, {\n                          body: this.postBody\n                    })\n                } catch (e) {\n                   this.errors.push(e)\n                }\n                */\n\n                /**if(this.input.username != \"\" && this.input.password != \"\") {\n                    if(this.input.username == this.$parent.mockAccount.username && this.input.password == this.$parent.mockAccount.password) {\n                        this.$emit(\"authenticated\", true);\n                        this.$router.replace({ name: \"secure\" });\n                    } else {\n                        console.log(\"The username and / or password is incorrect\");\n                    }\n                } else {\n                    console.log(\"A username and password must be present\");\n                }*/\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #login {\n        width: 500px;\n        border: 1px solid #CCCCCC;\n        background-color: #FFFFFF;\n        margin: auto;\n        margin-top: 200px;\n        padding: 20px;\n    }\n</style>"],"sourceRoot":"src/views"}]}