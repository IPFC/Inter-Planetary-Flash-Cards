{"remainingRequest":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/thread-loader/dist/cjs.js!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/babel-loader/lib/index.js!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/eslint-loader/index.js??ref--13-0!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/store/index.js","dependencies":[{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/store/index.js","mtime":1575388401070},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCBWdWV4UGVyc2lzdGVuY2UgZnJvbSAndnVleC1wZXJzaXN0JzsKVnVlLnVzZShWdWV4KTsKdmFyIHZ1ZXhMb2NhbCA9IG5ldyBWdWV4UGVyc2lzdGVuY2UoewogIGtleTogJ3Z1ZXgnLAogIC8vIFRoZSBrZXkgdG8gc3RvcmUgdGhlIHN0YXRlIG9uIGluIHRoZSBzdG9yYWdlIHByb3ZpZGVyLgogIHN0b3JhZ2U6IHdpbmRvdy5sb2NhbFN0b3JhZ2UsCiAgLy8gRnVuY3Rpb24gdGhhdCBwYXNzZXMgdGhlIHN0YXRlIGFuZCByZXR1cm5zIHRoZSBzdGF0ZSB3aXRoIG9ubHkgdGhlIG9iamVjdHMgeW91IHdhbnQgdG8gc3RvcmUuCiAgcmVkdWNlcjogZnVuY3Rpb24gcmVkdWNlcihzdGF0ZSkgewogICAgcmV0dXJuIHsKICAgICAgand0OiBzdGF0ZS5qd3QgLy8ga2VlcFRoaXNNb2R1bGU6IHN0YXRlLmtlZXBUaGlzTW9kdWxlLAogICAgICAvLyBrZWVwVGhpc01vZHVsZVRvbzogc3RhdGUua2VlcFRoaXNNb2R1bGVUb28KCiAgICB9OwogIH0gLy8gRnVuY3Rpb24gdGhhdCBwYXNzZXMgYSBtdXRhdGlvbiBhbmQgbGV0cyB5b3UgZGVjaWRlIGlmIGl0IHNob3VsZCB1cGRhdGUgdGhlIHN0YXRlIGluIGxvY2FsU3RvcmFnZS4KICAvLyBmaWx0ZXI6IG11dGF0aW9uID0+ICh0cnVlKQoKfSk7CnZhciBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgand0OiBudWxsLAogICAgand0VmFsaWQ6IGZhbHNlLAogICAgdXNlckNvbGxlY3Rpb246IG51bGwsCiAgICBkZWNrc01ldGE6IG51bGwKICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlSnd0OiBmdW5jdGlvbiB1cGRhdGVKd3Qoc3RhdGUsIG5ld0p3dCkgewogICAgICBzdGF0ZS5qd3QgPSBuZXdKd3Q7CiAgICB9LAogICAgZGVsZXRlSnd0OiBmdW5jdGlvbiBkZWxldGVKd3Qoc3RhdGUpIHsKICAgICAgc3RhdGUuand0ID0gbnVsbDsKICAgIH0sCiAgICB0b2dnbGVKd3RWYWxpZDogZnVuY3Rpb24gdG9nZ2xlSnd0VmFsaWQoc3RhdGUsIGJvb2wpIHsKICAgICAgc3RhdGUuand0VmFsaWQgPSBib29sOwogICAgfSwKICAgIHVwZGF0ZVVzZXJDb2xsZWN0aW9uOiBmdW5jdGlvbiB1cGRhdGVVc2VyQ29sbGVjdGlvbihzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS51c2VyQ29sbGVjdGlvbiA9IGRhdGE7CiAgICB9LAogICAgdXBkYXRlRGVja3NNZXRhOiBmdW5jdGlvbiB1cGRhdGVEZWNrc01ldGEoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuZGVja3NNZXRhID0gZGF0YTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KGNvbnRleHQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ2RlbGV0ZUp3dCcpOwogICAgfSwKICAgIGNoZWNrSnd0OiBmdW5jdGlvbiBjaGVja0p3dChjb250ZXh0KSB7CiAgICAgIHZhciBqd3QgPSBjb250ZXh0LnN0YXRlLmp3dDsKCiAgICAgIGlmICghand0IHx8IGp3dC5zcGxpdCgnLicpLmxlbmd0aCA8IDMpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgndG9nZ2xlSnd0VmFsaWQnLCBmYWxzZSk7CiAgICAgIH0KCiAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShhdG9iKGp3dC5zcGxpdCgnLicpWzFdKSk7CiAgICAgIHZhciBleHAgPSBuZXcgRGF0ZShkYXRhLmV4cCAqIDEwMDApOyAvLyBKUyBkZWFscyB3aXRoIGRhdGVzIGluIG1pbGxpc2Vjb25kcyBzaW5jZSBlcG9jaAoKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIGNvbnRleHQuY29tbWl0KCd0b2dnbGVKd3RWYWxpZCcsIG5vdyA8IGV4cCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBpc0F1dGhlbnRpY2F0ZWQ6IGZ1bmN0aW9uIGlzQXV0aGVudGljYXRlZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuand0VmFsaWQ7CiAgICB9CiAgfSwKICBwbHVnaW5zOiBbdnVleExvY2FsLnBsdWdpbl0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/store/index.js"],"names":["Vue","Vuex","VuexPersistence","use","vuexLocal","key","storage","window","localStorage","reducer","state","jwt","store","Store","jwtValid","userCollection","decksMeta","mutations","updateJwt","newJwt","deleteJwt","toggleJwtValid","bool","updateUserCollection","data","updateDecksMeta","actions","logout","context","commit","checkJwt","split","length","JSON","parse","atob","exp","Date","now","getters","isAuthenticated","plugins","plugin"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,IAAMG,SAAS,GAAG,IAAIF,eAAJ,CAAoB;AACpCG,EAAAA,GAAG,EAAE,MAD+B;AACvB;AACbC,EAAAA,OAAO,EAAEC,MAAM,CAACC,YAFoB;AAGpC;AACAC,EAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,WAAY;AACnBC,MAAAA,GAAG,EAAED,KAAK,CAACC,GADQ,CAEnB;AACA;;AAHmB,KAAZ;AAAA,GAJ2B,CASpC;AACA;;AAVoC,CAApB,CAAlB;AAaA,IAAMC,KAAK,GAAG,IAAIX,IAAI,CAACY,KAAT,CAAe;AAC3BH,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,IADA;AAELG,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,cAAc,EAAE,IAHX;AAILC,IAAAA,SAAS,EAAE;AAJN,GADoB;AAO3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACCR,KADD,EACQS,MADR,EACgB;AACvBT,MAAAA,KAAK,CAACC,GAAN,GAAYQ,MAAZ;AACD,KAHQ;AAITC,IAAAA,SAJS,qBAICV,KAJD,EAIQ;AACfA,MAAAA,KAAK,CAACC,GAAN,GAAY,IAAZ;AACD,KANQ;AAOTU,IAAAA,cAPS,0BAOMX,KAPN,EAOaY,IAPb,EAOmB;AAC1BZ,MAAAA,KAAK,CAACI,QAAN,GAAiBQ,IAAjB;AACD,KATQ;AAUTC,IAAAA,oBAVS,gCAUYb,KAVZ,EAUmBc,IAVnB,EAUyB;AAChCd,MAAAA,KAAK,CAACK,cAAN,GAAuBS,IAAvB;AACD,KAZQ;AAaTC,IAAAA,eAbS,2BAaOf,KAbP,EAacc,IAbd,EAaoB;AAC3Bd,MAAAA,KAAK,CAACM,SAAN,GAAkBQ,IAAlB;AACD;AAfQ,GAPgB;AAwB3BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,MADO,kBACAC,OADA,EACS;AACdA,MAAAA,OAAO,CAACC,MAAR,CAAe,WAAf;AACD,KAHM;AAIPC,IAAAA,QAJO,oBAIEF,OAJF,EAIW;AAChB,UAAIjB,GAAG,GAAGiB,OAAO,CAAClB,KAAR,CAAcC,GAAxB;;AACA,UAAI,CAACA,GAAD,IAAQA,GAAG,CAACoB,KAAJ,CAAU,GAAV,EAAeC,MAAf,GAAwB,CAApC,EAAuC;AACrCJ,QAAAA,OAAO,CAACC,MAAR,CAAe,gBAAf,EAAiC,KAAjC;AACD;;AACD,UAAML,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACxB,GAAG,CAACoB,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAD,CAAf,CAAb;AACA,UAAMK,GAAG,GAAG,IAAIC,IAAJ,CAASb,IAAI,CAACY,GAAL,GAAW,IAApB,CAAZ,CANgB,CAMsB;;AACtC,UAAME,GAAG,GAAG,IAAID,IAAJ,EAAZ;AACAT,MAAAA,OAAO,CAACC,MAAR,CAAe,gBAAf,EAAiCS,GAAG,GAAGF,GAAvC;AACD;AAbM,GAxBkB;AAuC3BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,yBAAA9B,KAAK;AAAA,aAAIA,KAAK,CAACI,QAAV;AAAA;AADf,GAvCkB;AA0C3B2B,EAAAA,OAAO,EAAE,CAACrC,SAAS,CAACsC,MAAX;AA1CkB,CAAf,CAAd;AA6CA,eAAe9B,KAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport VuexPersistence from 'vuex-persist';\n\nVue.use(Vuex)\n\nconst vuexLocal = new VuexPersistence({\n  key: 'vuex', // The key to store the state on in the storage provider.\n  storage: window.localStorage,\n  // Function that passes the state and returns the state with only the objects you want to store.\n  reducer: (state) => ({\n    jwt: state.jwt\n    // keepThisModule: state.keepThisModule,\n    // keepThisModuleToo: state.keepThisModuleToo\n  })\n  // Function that passes a mutation and lets you decide if it should update the state in localStorage.\n  // filter: mutation => (true)\n})\n\nconst store = new Vuex.Store({\n  state: {\n    jwt: null,\n    jwtValid: false,\n    userCollection: null,\n    decksMeta: null\n  },\n  mutations: {\n    updateJwt(state, newJwt) {\n      state.jwt = newJwt\n    },\n    deleteJwt(state) {\n      state.jwt = null\n    },\n    toggleJwtValid(state, bool) {\n      state.jwtValid = bool\n    },\n    updateUserCollection(state, data) {\n      state.userCollection = data\n    },\n    updateDecksMeta(state, data) {\n      state.decksMeta = data\n    }\n  },\n  actions: {\n    logout(context) {\n      context.commit('deleteJwt')\n    },\n    checkJwt(context) {\n      let jwt = context.state.jwt\n      if (!jwt || jwt.split('.').length < 3) {\n        context.commit('toggleJwtValid', false)\n      }\n      const data = JSON.parse(atob(jwt.split('.')[1]))\n      const exp = new Date(data.exp * 1000) // JS deals with dates in milliseconds since epoch\n      const now = new Date()\n      context.commit('toggleJwtValid', now < exp)\n    }\n  },\n  getters: {\n    isAuthenticated: state => state.jwtValid\n  },\n  plugins: [vuexLocal.plugin]\n})\n\nexport default store\n"]}]}