{"remainingRequest":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/views/Login.vue?vue&type=template&id=26084dc2&scoped=true&","dependencies":[{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/src/views/Login.vue","mtime":1575389963195},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenlu/Documents/GitHub/Inter-Planetary-Flash-Cards/ipfc_webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}